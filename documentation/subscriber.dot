digraph {
  subgraph workers {
    label = "Workers";
    node [style=filled, color=blue, fontcolor=white];

    // This is a list of all of the workers in the subscriber SDK
    ChangeResolution;
    Disconnect;
    ProcessInitialPresenceMessages;
    StartConnection;
    StopConnection;
    SubscribeForPresenceMessages;
    SubscribeToChannel;
    UpdateChannelConnectionState;
    UpdateConnectionState;
    UpdatePublisherPresence;
  }

  subgraph ably_wrapper {
    label = "Ably wrapper";
    node [style=filled, color=yellow];

    close;
    connect;
    disconnect;
    enterChannelPresence;
    getCurrentPresence;
    startConnection;
    subscribeForPresenceMessages;
    updatePresenceData;
  }

  subgraph CoreSubscriber_public_methods {
    label = "CoreSubscriber public methods";
    node [style=filled, color=red];

    CoreSubscriber_init [label = "init"];
  }

  subgraph DefaultSubscriber_public_methods {
    label = "DefaultSubscriber public methods";
    node [style=filled, color=pink];

    DefaultSubscriber_init [label = "init"];
    start;
    resolutionPreference;
    stop;
  }

  subgraph CoreSubscriber_SubscriberInteractor {
    label = "CoreSubscriberâ€™s implementation of SubscriberInteractor"
    node [style=filled, color=purple, fontcolor=white];

    notifyAssetIsOffline;
    subscribeForChannelState;
    subscribeForEnhancedEvents;
    subscribeForRawEvents;
  }

  // Workers posted by workers

  ProcessInitialPresenceMessages -> SubscribeToChannel;

  StartConnection -> SubscribeForPresenceMessages;

  SubscribeForPresenceMessages -> Disconnect;
  SubscribeForPresenceMessages -> ProcessInitialPresenceMessages;
  SubscribeForPresenceMessages -> UpdatePublisherPresence;

  // Ably wrapper methods called by workers

  ChangeResolution -> updatePresenceData;

  Disconnect -> disconnect;

  StartConnection -> connect;
  StartConnection -> enterChannelPresence;
  StartConnection -> startConnection;

  StopConnection -> close;

  SubscribeForPresenceMessages -> getCurrentPresence;
  SubscribeForPresenceMessages -> subscribeForPresenceMessages;

  // SubscriberInteractor methods called by workers

  StopConnection -> notifyAssetIsOffline;

  SubscribeToChannel -> subscribeForChannelState;
  SubscribeToChannel -> subscribeForEnhancedEvents;
  SubscribeToChannel -> subscribeForRawEvents;

  // CoreSubscriber enqueued workers

  CoreSubscriber_init -> UpdateConnectionState

  subscribeForChannelState -> UpdateChannelConnectionState

  // DefaultSubscriber called methods

  DefaultSubscriber_init -> CoreSubscriber_init;

  // DefaultSubscriber enqueued workers (by calling core.enqueue)

  start -> StartConnection;
  resolutionPreference -> ChangeResolution;
  stop -> StopConnection;
}
